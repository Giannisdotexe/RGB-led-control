using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO.Ports;
using System.Diagnostics;
using System.Globalization;

namespace RGBcontrol
{
    public partial class main : Form
    {
        ColorDialog colorPicker = new ColorDialog()
        {
            FullOpen = true
        };
        SerialPort Arduino = new SerialPort()
        {
            BaudRate = 9600
        };//create objects for a color picker and the serial port to 
         // comunicate with the arduino 
        int R = 0;
        int G = 0;
        int B = 0;
        string Hex = "";
        void update()
        {
            Rbar.Value = R;
            Gbar.Value = G;
            Bbar.Value = B;
            Rtext.Text = Convert.ToString(R);
            Gtext.Text = Convert.ToString(G);
            Btext.Text = Convert.ToString(B);
            ColorPreView.BackColor = Color.FromArgb(R, G, B);
            Hex = string.Format("{0:X2}{1:X2}{2:X2}", R, G, B);
            HexBox.Text = Hex;
        }//to redure code size and clutter we have a single function,when executed it will do the updates to the ui elements 

        void set()
        {
            try
            {
                if (!Arduino.IsOpen)
                {
                    Arduino.Open();
                    Arduino.Write(Hex);
                    Arduino.Close();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(Convert.ToString(ex));
            }
        }//every time this executes , the hex string generated by update()will be transfered to arduino for 
        //further prosessing and led control 

        public main()
        {
            string[] ports = SerialPort.GetPortNames();
            InitializeComponent();
            MaximizeBox = false;
            Rtext.Text = Convert.ToString(R);
            Gtext.Text = Convert.ToString(G);
            Btext.Text = Convert.ToString(B);
            foreach (string port in ports)
            {
                comboBox1.Items.Add(port);
                Console.WriteLine(port);
                if (ports[0] != null)
                {
                    comboBox1.SelectedItem = ports[0];
                }
            }//request the systems serial ports and display them to the combo box for the user to decide 
        }
        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            Arduino.PortName = comboBox1.Text;//set com name
        }
        private void CpButton_Click(object sender, EventArgs e)
        {
            colorPicker.ShowDialog();
            R = colorPicker.Color.R;
            G = colorPicker.Color.G;
            B = colorPicker.Color.B;
            Debug.WriteLine(colorPicker.Color);//open the color picker for the user to define 
            update();                           // custom colors 
        }

        private void OKbtn_Click(object sender, EventArgs e)
        {
            if (HexBox.Text.IndexOf('#') != -1)
                HexBox.Text = HexBox.Text.Replace("#", "");
            R = int.Parse(HexBox.Text.Substring(0, 2), NumberStyles.AllowHexSpecifier);
            G = int.Parse(HexBox.Text.Substring(2, 2), NumberStyles.AllowHexSpecifier);
            B = int.Parse(HexBox.Text.Substring(4, 2), NumberStyles.AllowHexSpecifier);
            update(); //convert a hex string to RGB values 
            set();       
        }

        private void Apply_Click(object sender, EventArgs e)
        {
            set();//send data to arduino 
        }
        private void Rbar_Scroll(object sender, EventArgs e)
        {
            R = Rbar.Value;
            update();
        }
        private void Gbar_Scroll(object sender, EventArgs e)
        {
            G = Gbar.Value;
            update();
        }
        private void Bbar_Scroll(object sender, EventArgs e)
        {

            B = Bbar.Value;
            update();
        }
        //-----pre defined colors ----
        private void C1_Click(object sender, EventArgs e)
        {
            R = C1.ForeColor.R;
            G = C1.ForeColor.G;
            B = C1.ForeColor.B;
            update(); //convert a hex string to RGB values 
            set();
        }

        private void C2_Click(object sender, EventArgs e)
        {
            R = C2.ForeColor.R;
            G = C2.ForeColor.G;
            B = C2.ForeColor.B;
            update();
            set();
        }

        private void C3_Click(object sender, EventArgs e)
        {
            R = C3.ForeColor.R;
            G = C3.ForeColor.G;
            B = C3.ForeColor.B;
            update();
            set();
        }

        private void C4_Click(object sender, EventArgs e)
        {
            R = C4.ForeColor.R;
            G = C4.ForeColor.G;
            B = C4.ForeColor.B;
            update();
            set();
        }

        private void C5_Click(object sender, EventArgs e)
        {
            R = C5.ForeColor.R;
            G = C5.ForeColor.G;
            B = C5.ForeColor.B;
            update();
            set();
        }

        private void C6_Click(object sender, EventArgs e)
        {
            R = C6.ForeColor.R;
            G = C6.ForeColor.G;
            B = C6.ForeColor.B;
            update();
            set();
        }

        private void C7_Click(object sender, EventArgs e)
        {
            R = C7.ForeColor.R;
            G = C7.ForeColor.G;
            B = C7.ForeColor.B;
            update();
            set();
        }

        private void C8_Click(object sender, EventArgs e)
        {
            R = C8.ForeColor.R;
            G = C8.ForeColor.G;
            B = C8.ForeColor.B;
            update();
            set();
        }

        private void C9_Click(object sender, EventArgs e)
        {
            R = C9.ForeColor.R;
            G = C9.ForeColor.G;
            B = C9.ForeColor.B;
            update();
            set();
        }       
    }
}
